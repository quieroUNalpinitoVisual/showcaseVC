<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on quieroUNalpinitoVisual</title><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/</link><description>Recent content in Introduction on quieroUNalpinitoVisual</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://quieroUNalpinitoVisualvisual.github.io/showcasevc/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/Antialiasing/AntialiasingLab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/Antialiasing/AntialiasingLab/</guid><description>Masking Lab # Seccion de pruebas de antialiasing.
Flecha derecha: Generar nuevo triangulo
Flecha izquierda: Pasar antialiasing</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/Antialiasing/AntialiasingRes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/Antialiasing/AntialiasingRes/</guid><description>Academic report # Introducci√≥n: # El Antialiasing (suavizado, antiescalonamiento o suavizado de bordes) son un conjunto de tecnicas diferentes las cuales quieren evitar el solapamiento de los bordes debida a representar una se√±al de alta resoluci√≥n en un monitor de baja resoluci√≥n.
Literatura: # M√©todos de AA: # Para lograr el efecto del antialiasing se realizan varios m√©todos con distintas aproximaciones:
Super sampling:
Basicamente consiste en realizar un an√°logo de el muestreo de una se√±al analoga y aumentar el muestreo de la misma para obtener mejores datos.</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/masking/maskingLab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/masking/maskingLab/</guid><description>Masking Lab # Seccion de pruebas de matrices de convolucion como paso intermedio para el c√°lculo de bordes mediante derivadas parciales.</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/masking/maskingRes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/masking/maskingRes/</guid><description>Masking Results # Conceptos # Lo primero que se realiz√≥ fue programar la funci√≥n que permitir√° la convoluci√≥n de un kernel sobre una imagen de acuerdo con lo encontrado en wikipedia
Expand ‚Üï Wiki pseudocode # for each image row in input image: for each pixel in image row: set accumulator to zero for each kernel row in kernel: for each element in kernel row: if element position corresponding* to pixel position then multiply element value corresponding* to pixel value add result to accumulator endif set output image pixel to accumulator la implementaci√≥n concreta es la siguiente</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/members/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/members/</guid><description>Members # Nicholson Stive Ochoa # Estudiante de Ingenieria de Sistemas y Computacion en la Universidad Nacional de Colombia.
Intereses ü§î # Acad√©micos üìò Desarrollo web Inteligencia artificial Desarrollo en multiplataforma Pasatiempos üéÆüé∏ Ver anime y series Hacer ejercicio Daniel Arturo Moreno # Estudiante de Ingenieria de Sistemas y Computacion en la Universidad Nacional de Colombia.
Intereses ü§î # Acad√©micos üìò
Desarrollo Web Arduino Linux Procesamiento de im√°genes Programaci√≥n Competitiva y Algoritmia Pasatiempos üéÆüé∏</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/shaders/imageProcessing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/shaders/imageProcessing/</guid><description>Image Processing # Controls # ‚¨ÖÔ∏è Reset
‚û°Ô∏è Apply Ridge Mask</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/shaders/Procedural/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/shaders/Procedural/</guid><description> Procedural Document #</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/shaders/proceduralTexturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/shaders/proceduralTexturing/</guid><description> Procedural texturing #</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/shaders/texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/shaders/texturing/</guid><description>Texturing # Controls # ‚¨ÖÔ∏è Reset
‚¨áÔ∏è HSL ( L )
‚¨ÜÔ∏è HSV ( V )
‚û°Ô∏è Average</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/terrain/terrain1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/terrain/terrain1/</guid><description>Terrain # En el primer terreno creado usamos TRIANGLE_STRIP como parametro para la funci√≥n beginShape()</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/terrain/terrain2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/terrain/terrain2/</guid><description>Terrain # En esta iteraci√≥n se hace uso del efecto de la banda de Mach para representar una ilusion de gradiente en la visualizaci√≥n del terreno.</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/terrain/terrain3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/terrain/terrain3/</guid><description>Terrain # Por ultimo utilizamos el parametro TRIANGLE_FAN.</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/terrain/terrainRes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/terrain/terrainRes/</guid><description>#Terrain
Con TRIANGLE_STRIP la figura a manejar es mas grande y por ende se utilizan menos recursos.
Pero el relleno es mas complicado.
Con la ilusion generada por la banda de Mach encontramos un rendimiento aceptable.
El efecto de relleno visual es natural exceptuando nuestro enfasis al marcar los bordes.
Con TRIANGLE_FAN la figura a manejar es mas peque√±a y por ende se utilizan mas recursos.
Pero el relleno es mas detallado y natural.</description></item><item><title/><link>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/Transformations/rubikcube/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://quieroUNalpinitoVisualvisual.github.io/showcasevc/docs/shortcodes/Transformations/rubikcube/</guid><description> Rubik&amp;rsquo;s Cube #</description></item></channel></rss>